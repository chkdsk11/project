<?php

namespace Shop\Models;

/**
 * BaiyangSmsAlarm
 * 
 * @package Shop\Models
 * @autogenerated by Phalcon Developer Tools
 * @date 2016-12-19, 09:24:15
 */
class BaiyangSmsAlarm extends BaseModel
{

    /**
     *
     * @var integer
     * @Primary
     * @Identity
     * @Column(type="integer", length=11, nullable=false)
     */
    public $alarm_id;

    /**
     *
     * @var string
     * @Column(type="string", length=100, nullable=false)
     */
    public $alarm_group_code;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=false)
     */
    public $alarm_group_name;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=false)
     */
    public $alarm_name;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=false)
     */
    public $alarm_code;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=false)
     */
    public $alarm_value;

    /**
     *
     * @var string
     * @Column(type="string", length=20, nullable=false)
     */
    public $alarm_number;

    /**
     *
     * @var string
     * @Column(type="string", nullable=true)
     */
    public $alarm_time;

    /**
     *
     * @var string
     * @Column(type="string", nullable=true)
     */
    public $remark;

    /**
     *
     * @var string
     * @Column(type="string", nullable=true)
     */
    public $create_time;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    public $create_at;

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'baiyang_sms_alarm';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return BaiyangSmsAlarm[]
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return BaiyangSmsAlarm
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

}
